# This file contains an example configuration for the Replicape rev B3
# board. To use this config, one must compile and install the
# micro-controller code for the "Beaglebone PRU", and then compile and
# install the micro-controller code a second time for a "Linux
# process".

# NOTE: Klipper does not alter the input/output state of the
# Beaglebone pins and it does not control their pull-up resistors.
# Typically the correct settings are automatically applied when the
# Beaglebone detects the Replicape board, but if changes are needed
# they must be specified in a "device tree overlay" or via the
# config-pin program.

# See docs/Config_Reference.md for a description of parameters.

[mcu]
serial: /dev/rpmsg_pru30
pin_map: beaglebone

[mcu host]
serial: /tmp/klipper_host_mcu

[replicape]
revision: B3
host_mcu: host
stepper_x_microstep_mode: spread16
stepper_x_current: 0.5
stepper_y_microstep_mode: spread16
stepper_y_current: 0.5
stepper_z_microstep_mode: spread16
stepper_z_current: 0.5
stepper_e_microstep_mode: 16
stepper_e_current: 0.5

[stepper_x]
step_pin: P8_17
dir_pin: P8_26
enable_pin: replicape:stepper_x_enable
microsteps: 16
rotation_distance: 40
endstop_pin: ^P9_25
position_endstop: 0
position_max: 200
homing_speed: 50

[stepper_y]
step_pin: P8_12
dir_pin: P8_19
enable_pin: replicape:stepper_y_enable
microsteps: 16
rotation_distance: 40
endstop_pin: ^P9_23
position_endstop: 0
position_max: 200
homing_speed: 50

[stepper_z]
step_pin: P8_13
dir_pin: P8_14
enable_pin: replicape:stepper_z_enable
microsteps: 16
rotation_distance: 8
endstop_pin: ^P9_13
position_endstop: 0
position_max: 200

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 25
max_z_accel: 30

[extruder]
step_pin: P9_12
dir_pin: P8_15
enable_pin: replicape:stepper_e_enable
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: replicape:power_e
sensor_type: EPCOS 100K B57560G104F
sensor_pin: host:analog4
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: replicape:power_hotbed
sensor_type: EPCOS 100K B57560G104F
sensor_pin: host:analog6
control: watermark
min_temp: 0
max_temp: 130

[fan]
pin: replicape:power_fan0

# The alternative servo pins channels on the endstops x2 and y2 can be used
# via the special relicape pins servo0 (P9_14) and servo1 (P9_16).
#[servo servo_x2]
#pin: replicape:servo0
#   PWM output pin controlling the servo. This parameter must be
#   provided.
#...

# Providing an example of a switch filament sensor using the Linux MCU for replicape, instead of the PRU which does not have enough memory:
#[filament_switch_sensor switch_sensor]
#switch_pin: HOST_X2_STOP

# providing board pin aliases for PRU firmware
[board_pins]
aliases:
   # step/dir pins
   X_DIR=P8_26, X_STEP=P8_17, Y_DIR=P8_19, Y_STEP=P8_12, Z_DIR=P8_14, Z_STEP=P8_13,
   E_DIR=P8_15, E_STEP=P9_12, H_DIR=P8_16, H_STEP=P8_11,
   # stepper fault pins
   FAULT_X=P8_10, FAULT_Y=P8_9, FAULT_Z=P9_24, FAULT_E=P8_18, FAULT_H=P8_8,
   # endstops
   STOP_X1=P9_25, STOP_X2=P9_11, STOP_Y1=P9_23, STOP_Y2=P9_28, STOP_Z1=P9_13, STOP_Z2=P9_18,
   # enable steppers (all on one pin)
   STEPPER_ENABLE=P9_41,
   # servos
   SERVO_0=P9_14, SERVO_1=P9_16,

[board_pins host]
mcu: host
aliases:
   # Host aliases for Linux MCU
   HOST_X2_STOP=gpio30, HOST_Y2_STOP=gpio113, HOST_Z2_STOP=gpio4
   # Thermistors
   THERM_E=analog4, THERM_H=analog5, THERM_BED=analog6
   # D1W pin
   DALLAS=gpio2
